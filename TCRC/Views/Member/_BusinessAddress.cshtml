@model TCRC.Models.Member.RegisterViewModel

<fieldset>
    <legend>Business Address</legend>
    <p>
        List your principal place of business and all other locations in California from which you will be conducting business. 
        (Your answer should be the same as for Question 4 on the Seller of Travel Registration Application.) Indicate which 
        location is your Primary Business location and which is your Primary Mailing address, noting if a PO Box. DO NOT CHECK 
        "I DO NOT DO BUSINESS WITH CUSTOMERS AT THIS LOCATION" FOR YOUR PRIMARY BUSINESS LOCATION. Doing business with customers 
        means in person, via mail, internet, fax, etc.
    </p>
    <div class="pure-g">
        <div class="FormElementGroupBusinessAddress">
            <div class="pure-u-2-3">
                @Html.LabelFor(m => m.BusinessAddresses[0].AgencyName, new { @class = "req" })
                @Html.TextBoxFor(m => m.BusinessAddresses[0].AgencyName, new { @class = "pure-input-3-4", required = "required", maxlength = "100" })
                @Html.ValidationMessageFor(m => m.BusinessAddresses[0].AgencyName)
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.BusinessAddresses[0].BusinessStartDate, new { @class = "req" })
                @Html.TextBoxFor(m => m.BusinessAddresses[0].BusinessStartDate, new { @class = "datepicker", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.BusinessAddresses[0].BusinessStartDate)
            </div>
            <div class="pure-u-1">
                @Html.LabelFor(m => m.BusinessAddresses[0].Address1, new { @class = "req" })
                @Html.TextBoxFor(m => m.BusinessAddresses[0].Address1, new { @class = "pure-input-2-3", required = "required", maxlength = "255" })
                @Html.ValidationMessageFor(m => m.BusinessAddresses[0].Address1)
            </div>
            <div class="pure-u-1">
                @Html.LabelFor(m => m.BusinessAddresses[0].Address2)
                @Html.TextBoxFor(m => m.BusinessAddresses[0].Address2, new { @class = "pure-input-2-3", maxlength = "255" })
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.BusinessAddresses[0].City, new { @class = "req" })
                @Html.TextBoxFor(m => m.BusinessAddresses[0].City, new { required = "required", maxlength = "50" })
                @Html.ValidationMessageFor(m => m.BusinessAddresses[0].City)
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.BusinessAddresses[0].State, new { @class = "req" })
                @Html.DropDownListFor(m => m.BusinessAddresses[0].State, new ListOfStates(), new { @class = "pure-u-11-12", required = "required" })
                @Html.ValidationMessageFor(m => m.BusinessAddresses[0].State)
            </div>
            <div class="pure-u-1-12">
                @Html.LabelFor(m => m.BusinessAddresses[0].ZipCode, new { @class = "req" })
                @Html.TextBoxFor(m => m.BusinessAddresses[0].ZipCode, new { @class = "pure-input-1", maxlength = "5", required = "required" })
                @Html.ValidationMessageFor(m => m.BusinessAddresses[0].ZipCode)
            </div>
            <div class="pure-u-1-24" style="text-align: center;">
                <label>&nbsp;</label>
                -
            </div>
            <div class="pure-u-4-24">
                <label>&nbsp;</label>
                @Html.TextBoxFor(m => m.BusinessAddresses[0].Zip4, new { @class = "pure-input-1-3", maxlength = "4" })
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.BusinessAddresses[0].PhoneNumber, new { @class = "req" })
                @Html.TextBoxFor(m => m.BusinessAddresses[0].PhoneNumber, new { mask = "(999) 999-9999", required = "required" })
                @Html.ValidationMessageFor(m => m.BusinessAddresses[0].PhoneNumber)
            </div>
            <div class="pure-u-2-3">
                @Html.LabelFor(m => m.BusinessAddresses[0].Fax)
                @Html.TextBoxFor(m => m.BusinessAddresses[0].Fax, new { mask = "(999) 999-9999" })
            </div>
            <div class="pure-u-1-2">
                @Html.LabelFor(m => m.BusinessAddresses[0].HasNoCustomers)
                @Html.CheckBoxFor(m => m.BusinessAddresses[0].HasNoCustomers, new { @class = "pure-checkbox" })
            </div>
            <div class="pure-u-1-2">
                @Html.LabelFor(m => m.BusinessAddresses[0].IsPOBox)
                @Html.CheckBoxFor(m => m.BusinessAddresses[0].IsPOBox, new { @class = "pure-checkbox" })
            </div>
            <div class="pure-u-1-2">
                @Html.LabelFor(m => m.BusinessAddresses[0].IsPrimary)
                @Html.RadioButtonFor(m => m.BusinessAddresses[0].IsPrimary, true, new { @class = "pure-radio" })
                @Html.ValidationMessageFor(m => m.BusinessAddresses[0].IsPrimary)
            </div>
            <div class="pure-u-1-2">
                @Html.LabelFor(m => m.BusinessAddresses[0].IsMailing)
                @Html.RadioButtonFor(m => m.BusinessAddresses[0].IsMailing, true, new { @class = "pure-radio" })
                @Html.ValidationMessageFor(m => m.BusinessAddresses[0].IsMailing)
            </div>
        </div>
        <div class="pure-u-1">
            <p>
                Is there another location you plan to sell travel from? If yes, click Add Location.
            </p>
        </div>
        <div class="pure-u-1" style="padding: 10px 0 30px 0;">
            <input type="button" id="btnAddBusinessAddress" class="pure-button" style="font-size: 85%" value="Add Location" />
            <input type="button" id="btnRemoveBusinessAddress" class="pure-button" style="font-size: 85%; margin-left: 10px;" value="Remove Location" disabled="disabled" />
        </div>
    </div>
</fieldset>