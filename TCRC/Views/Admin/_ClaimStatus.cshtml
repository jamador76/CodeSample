@model TCRC.Models.Admin.ProcessClaimViewModel

<fieldset>
    <legend>Claim Status</legend>
    <div class="pure-g">
        <div class="pure-u-1">
            @Html.LabelFor(m => m.ClaimStatusTypeId)
            @Html.DropDownListFor(m => m.ClaimStatusTypeId, TCRC.Models.Admin.ProcessClaimViewModel.ClaimStatusTypes, new { required = "required" })
            @Html.ValidationMessageFor(m => m.ClaimStatusTypeId)
        </div>
        <div class="pure-u-1">
            @Html.LabelFor(m => m.EmailText)
            @Html.TextAreaFor(m => m.EmailText, new { required = "required", rows = "20", cols = "100" })
            @Html.ValidationMessageFor(m => m.EmailText)
        </div>
        <div class="pure-u-1">
            @Html.CheckBoxFor(m => m.DoNotSendLetter)
            @Html.LabelFor(m => m.DoNotSendLetter)
        </div>

        <div id="claim-approved-paid" style="display: none; width: 100%;">
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ApprovedCheckNumber)
                @Html.TextBoxFor(m => m.ApprovedCheckNumber)
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ApprovedCheckAmount)
                @Html.TextBoxFor(m => m.ApprovedCheckAmount)
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ApprovedCheckDate)
                @Html.TextBoxFor(m => m.ApprovedCheckDate, new { @class = "datepicker payment-date", @readonly = "readonly" })
            </div>
        </div>

        <div id="claim-check-bounced" style="display: none; width: 100%;">
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ReceivedCheckNumber)
                @Html.TextBoxFor(m => m.ReceivedCheckNumber)
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ReceivedCheckAmount)
                @Html.TextBoxFor(m => m.ReceivedCheckAmount)
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ReceivedCheckBouncedDate)
                @Html.TextBoxFor(m => m.ReceivedCheckBouncedDate, new { @class = "datepicker payment-date", @readonly = "readonly" })
            </div>
        </div>

        <div id="claim-check-cleared" style="display: none; width: 100%;">
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ReceivedCheckNumber)
                @Html.TextBoxFor(m => m.ReceivedCheckNumber)
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ReceivedCheckAmount)
                @Html.TextBoxFor(m => m.ReceivedCheckAmount)
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ReceivedCheckClearedDate)
                @Html.TextBoxFor(m => m.ReceivedCheckClearedDate, new { @class = "datepicker payment-date", @readonly = "readonly" })
            </div>
        </div>

        <div id="claim-check-received" style="display: none; width: 100%;">
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ReceivedCheckNumber)
                @Html.TextBoxFor(m => m.ReceivedCheckNumber)
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ReceivedCheckAmount)
                @Html.TextBoxFor(m => m.ReceivedCheckAmount)
            </div>
            <div class="pure-u-1-3">
                @Html.LabelFor(m => m.ReceivedCheckDate)
                @Html.TextBoxFor(m => m.ReceivedCheckDate, new { @class = "datepicker payment-date", @readonly = "readonly" })
            </div>
        </div>

        <div id="claim-fee-refunded" style="display: none;">
            <div class="pure-u-1">
                @Html.LabelFor(m => m.FeeRefundAmount)
                @Html.TextBoxFor(m => m.FeeRefundAmount)
            </div>
        </div>

        <div class="pure-u-1">
            @Html.LabelFor(m => m.Notes)
            @Html.TextAreaFor(m => m.Notes, new { rows = "5", cols = "100" })
        </div>
    </div>
</fieldset>
